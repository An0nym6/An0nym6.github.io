<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-06-23T10:41:37+08:00</updated><id>/</id><title type="html">Random Thoughts</title><subtitle>©️ Designed by shuq3 &amp; An0nym6</subtitle><entry><title type="html"></title><link href="/2018/06/23/2018-06-23-%E5%A4%A7%E8%B0%8B%E5%B0%8F%E8%AE%A1%E4%BA%94%E5%8D%81%E5%B9%B4-%E8%AF%B8%E8%91%9B%E4%BA%AE%E4%BC%A0%E7%AC%AC%E4%B8%80%E5%8D%B7-%E4%B9%A6%E8%AF%84.html" rel="alternate" type="text/html" title="" /><published>2018-06-23T10:41:37+08:00</published><updated>2018-06-23T10:41:37+08:00</updated><id>/2018/06/23/2018-06-23-%E3%80%8A%E5%A4%A7%E8%B0%8B%E5%B0%8F%E8%AE%A1%E4%BA%94%E5%8D%81%E5%B9%B4:%E8%AF%B8%E8%91%9B%E4%BA%AE%E4%BC%A0%E7%AC%AC%E4%B8%80%E5%8D%B7%E3%80%8B%E4%B9%A6%E8%AF%84</id><content type="html" xml:base="/2018/06/23/2018-06-23-%E5%A4%A7%E8%B0%8B%E5%B0%8F%E8%AE%A1%E4%BA%94%E5%8D%81%E5%B9%B4-%E8%AF%B8%E8%91%9B%E4%BA%AE%E4%BC%A0%E7%AC%AC%E4%B8%80%E5%8D%B7-%E4%B9%A6%E8%AF%84.html">&lt;p&gt;内容：★★★★☆&lt;/p&gt;

&lt;p&gt;文笔：★★★★★&lt;/p&gt;

&lt;p&gt;排版：★★★★★&lt;/p&gt;

&lt;p&gt;综合：★★★★★&lt;/p&gt;

&lt;p&gt;作为一名工科生，我在文学方面并没有多大的造诣，本文只简单谈谈自己一些片面的观后感，如有谬误，欢迎指正。&lt;/p&gt;

&lt;p&gt;正如马伯庸在本书序言中所述，作者若虚著此书的目的是洗去诸葛亮脸上的油彩。人们熟知的《三国演义》中有太多诸葛亮的浮夸故事，因此若虚希望能还原出一个“有血有肉、真情实感”的诸葛亮。作者确实做到了这一点，若虚在研读大量史实之后在此基础上进行猜想，细节丰富地描述了诸葛亮从几岁到二十几岁这一时间阶段的生活经历，如果将历史文献中的诸葛亮比作像素图，那么这本书中的诸葛亮就如 AR 立体模型一般真实。&lt;/p&gt;

&lt;p&gt;作者对文字的驾驭能力堪称一流。书中诸葛亮和刘备这两条主线同时推进，起初它们像两条平行线，但渐渐地它们有了夹角，似乎会在不久的将来相会。作者善以景衬情，对自然事物的描写信手拈来，让读者眼中有画，也能真切体会到人物情感。作者还会时不时摘来一两句引用，或是赋一两首诗歌，让读者嗅到书香。最令我惊叹的是书中对诸葛亮几次辩述的描写，诸葛亮通过言语辩倒对手时，作者也需辩倒读者，诸葛亮有理有据地证明着自己论点时，也是体现着本书作者对这些问题的深刻思考。&lt;/p&gt;

&lt;p&gt;在我看来，卷一美中不足的是作者并没能“抹去诸葛亮脸上的油彩”。可能因为作者本身对诸葛亮的痴情，全书字里行间内都透着他/她对诸葛亮的喜爱。除在他年幼习棋时，本书中的诸葛亮对弈未尝败过一场。这里的对弈不只指围棋，还指围棋的各种变体，以及民间大众喜欢的各种博弈游戏；诸葛亮的对手也不只指路人甲乙丙丁，还包括世间各路顶级高手。但凡是智力比拼，诸葛亮也未尝败过一场，唯一的遗憾是在队友拖后腿的情况下与庞统战平，除此之外的比拼诸葛亮均全胜。若虚去除了“草船借箭”、“空城计”这样的神话，但他/她却杜撰出了另一批神话。&lt;/p&gt;

&lt;p&gt;《大谋小计五十年：诸葛亮传》全书分为五卷，我所借阅的是第一卷。本卷内容是人们较少知晓的诸葛亮幼年时期的故事，如果大家有兴趣的话，不妨一读。&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">《天才在左 疯子在右》书评</title><link href="/2018/05/25/%E5%A4%A9%E6%89%8D%E5%9C%A8%E5%B7%A6-%E7%96%AF%E5%AD%90%E5%9C%A8%E5%8F%B3-%E4%B9%A6%E8%AF%84.html" rel="alternate" type="text/html" title="《天才在左 疯子在右》书评" /><published>2018-05-25T12:00:00+08:00</published><updated>2018-05-25T12:00:00+08:00</updated><id>/2018/05/25/%E3%80%8A%E5%A4%A9%E6%89%8D%E5%9C%A8%E5%B7%A6%20%E7%96%AF%E5%AD%90%E5%9C%A8%E5%8F%B3%E3%80%8B%E4%B9%A6%E8%AF%84</id><content type="html" xml:base="/2018/05/25/%E5%A4%A9%E6%89%8D%E5%9C%A8%E5%B7%A6-%E7%96%AF%E5%AD%90%E5%9C%A8%E5%8F%B3-%E4%B9%A6%E8%AF%84.html">&lt;p&gt;内容：★★★★☆&lt;/p&gt;

&lt;p&gt;文笔：★★★☆☆&lt;/p&gt;

&lt;p&gt;排版：★★☆☆☆&lt;/p&gt;

&lt;p&gt;综合：★★★☆☆&lt;/p&gt;

&lt;p&gt;作为一名工科生，我在文学方面并没有多大的造诣，本文只简单谈谈自己一些片面的观后感，如有谬误，欢迎指正。&lt;/p&gt;

&lt;p&gt;这本书最吸引人的当属它的内容，作者高铭耗时数年与数百位精神病人进行深入交谈，期间通过录音和笔记详细地记录了他与病人间的交流过程，最后经过整理，完成了这一本书。&lt;/p&gt;

&lt;p&gt;值得注意的是，这本书并不是一份客观的访谈手记。照作者的原话，正文 48 个篇章中仅“近20余篇”来自真实案例，且这些案例也经过“增添或删减”。也许是为了达到某些艺术效果，作者“神化”了不少精神病人。比如书中多次提到有病人使用尖端的量子物理知识来构造自己的世界观，我很怀疑作者在著书时查阅了不少相关资料，替那些病人圆他们的观点，让那些病人的理论显得天衣无缝。这样一来，书的可读性和趣味性都会上升，但书也会因丢失了真实性而成为小说。当然，书中的一些思考是深刻的，作者写书的目的不在于将其作为医学案例供后人分析，而是希望读者能看到更宽广的世界。&lt;/p&gt;

&lt;p&gt;本书包含大段对白，遣词造句十分口语化，对交谈双方的神情、动作和心理没有过多的描写，不过也不奇怪，本书是事发后一年由作者按录音和笔记进行整理，缺乏细节在所难免。另外作者本身并不严谨，书中出现了类似“按百分比来说，某某大概占三分之一”这样的措辞，作者对《黑客帝国》这一部电影的英语称呼在书中也前后不一。&lt;/p&gt;

&lt;p&gt;我从中山大学图书馆中借到了这本书，它由 2015 届某毕业生捐赠，因此可能为盗版书籍。书中有数量可观的错别字，印刷质量也不高。&lt;/p&gt;

&lt;p&gt;总的来说，这是一本有意思的书。&lt;/p&gt;</content><author><name></name></author><category term="阅读" /><summary type="html">内容：★★★★☆</summary></entry><entry><title type="html">香港澳门之旅</title><link href="/2018/05/13/%E9%A6%99%E6%B8%AF%E6%BE%B3%E9%97%A8%E4%B9%8B%E6%97%85.html" rel="alternate" type="text/html" title="香港澳门之旅" /><published>2018-05-13T12:00:00+08:00</published><updated>2018-05-13T12:00:00+08:00</updated><id>/2018/05/13/%E9%A6%99%E6%B8%AF%E6%BE%B3%E9%97%A8%E4%B9%8B%E6%97%85</id><content type="html" xml:base="/2018/05/13/%E9%A6%99%E6%B8%AF%E6%BE%B3%E9%97%A8%E4%B9%8B%E6%97%85.html">&lt;p&gt;最近和 shuq3 去了一趟香港和澳门，这些是我们在途中拍摄的照片。&lt;/p&gt;

&lt;div id=&quot;photo-container&quot;&gt;&lt;/div&gt;

&lt;div id=&quot;hint&quot;&gt;正在加载...加载完成大约需要 20M 的流量。&lt;/div&gt;

&lt;script&gt;
  times = 0;
  interval = setInterval(function() {
    times += 1;
    if (times === 87) {
      clearInterval(interval);
      $('#hint').html('加载完成！');
    }
    $('#photo-container').append('&lt;img class=&quot;photo&quot; src=&quot;https://raw.githubusercontent.com/An0nym6/Images/master/blog%20images/Trip%20to%20HK%20%26%20MO/' + times + '.jpg&quot;/&gt;');
  }, 2000);
&lt;/script&gt;</content><author><name></name></author><category term="旅行" /><summary type="html">最近和 shuq3 去了一趟香港和澳门，这些是我们在途中拍摄的照片。</summary></entry><entry><title type="html">如何在不同网络环境下调试网站</title><link href="/2018/03/12/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%B0%83%E8%AF%95%E7%BD%91%E7%AB%99.html" rel="alternate" type="text/html" title="如何在不同网络环境下调试网站" /><published>2018-03-12T12:00:00+08:00</published><updated>2018-03-12T12:00:00+08:00</updated><id>/2018/03/12/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%B0%83%E8%AF%95%E7%BD%91%E7%AB%99</id><content type="html" xml:base="/2018/03/12/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%B0%83%E8%AF%95%E7%BD%91%E7%AB%99.html">&lt;p&gt;很多人都知道 Chrome 开发者工具的 Network 下可以自定义网络环境，Chrome 可以模拟在 Fast 3G、Slow 3G 等一系列网络环境中加载页面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/An0nym6/Images/master/blog%20images/Fiddler%20%26%20Clumsy/1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果你只是想简单地调试调试本地网站，那么这个工具可以满足你的需求。但是使用这种方法只能“放慢”网络，如果你本身的网络环境就很糟糕，加载网站的时间很长，或者你需要更加高级的网络设置，比如设置丢包率，压低带宽值，那么这个工具并不能满足你的需求。这篇文章希望解决的问题是将网络环境可控化，基本的设想是，将外部网站缓存在不受网络环境干扰的内网，然后人工地制造时延、丢包、带宽限制等因素。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/An0nym6/Images/master/blog%20images/Fiddler%20%26%20Clumsy/2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;代理服务器&quot;&gt;代理服务器&lt;/h4&gt;

&lt;p&gt;在代理服务器上我们需要用到 Web 调试工具 Fiddler。它本身的功能有很多，在这里我们需要用到的是它的监听功能和 AutoResponder。Fiddler 可以监听当前机器上发出的 HTTP 请求及收到的 HTTP 响应，并可以按照进程 ID 对捕获到的数据进行过滤。AutoResponder 可以使用捕获到的数据模拟 Web 服务器对客户端作出响应。&lt;/p&gt;

&lt;p&gt;首先，我们需要使用代理服务器上的浏览器访问我们需要调试的网站，在此期间使用 Fiddler 捕获所有进出的 HTTP 数据包，将它们缓存在本地。然后，我们打开 AutoResponder，它将使用先前缓存的 HTTP 响应回复发往本机 8888 端口的 HTTP 请求。最后，我们还需要设置 Clumsy 来制造我们所需的网络环境。&lt;/p&gt;

&lt;p&gt;下图为 AutoResponder 代理 http://www.qq.com：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/An0nym6/Images/master/blog%20images/Fiddler%20%26%20Clumsy/3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下图为使用 Clumsy 在 8888 端口上制造我们所需的网络环境：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/An0nym6/Images/master/blog%20images/Fiddler%20%26%20Clumsy/4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;访问方&quot;&gt;访问方&lt;/h4&gt;

&lt;p&gt;我们只需要设置浏览器代理，让它将所有 HTTP 请求都发往 代理服务器IP:8888 即可，比如 Chrome 浏览器可以使用插件 SwitchyOmega。至此，我们需要调试的网站所处网络环境就是完全可控的了。&lt;/p&gt;</content><author><name></name></author><category term="网络" /><summary type="html">很多人都知道 Chrome 开发者工具的 Network 下可以自定义网络环境，Chrome 可以模拟在 Fast 3G、Slow 3G 等一系列网络环境中加载页面：</summary></entry><entry><title type="html">欢迎来到 Random Thoughts</title><link href="/2018/02/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0-Random-Thoughts.html" rel="alternate" type="text/html" title="欢迎来到 Random Thoughts" /><published>2018-02-12T12:00:00+08:00</published><updated>2018-02-12T12:00:00+08:00</updated><id>/2018/02/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%20Random%20Thoughts</id><content type="html" xml:base="/2018/02/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0-Random-Thoughts.html">&lt;p&gt;欢迎来到 Random Thoughts！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shuq3&quot;&gt;shuq3&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/An0nym6&quot;&gt;An0nym6&lt;/a&gt;（我）共同设计搭建了这个个人博客平台，它的源码被共享在这个 &lt;a href=&quot;https://github.com/An0nym6/PersonalBlog2&quot;&gt;GitHub 仓库&lt;/a&gt; 中。你现在访问的网站由我管理维护，另一个由 shuq3 管理维护的 Random Thoughts 网站运行在 &lt;a href=&quot;https://shuq3.github.io/&quot;&gt;https://shuq3.github.io/&lt;/a&gt; 。&lt;/p&gt;

&lt;h4 id=&quot;架构&quot;&gt;架构&lt;/h4&gt;
&lt;p&gt;Random Thoughts 是基于 &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; 架构的静态网站，&lt;a href=&quot;https://shuq3.github.io/&quot;&gt;https://shuq3.github.io/&lt;/a&gt; 和 &lt;a href=&quot;https://ranthot.cn/&quot;&gt;https://ranthot.cn/&lt;/a&gt; 都通过 GitHub 仓库直接运行在 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 上。&lt;/p&gt;

&lt;p&gt;shuq3 和我曾尝试自行实现博客平台的前后端，并使用 MongoDB、Express、Angular 2 和 Node.js 完成了一个博客平台的雏形（源码被共享在这个 &lt;a href=&quot;https://github.com/FerretTeam/FerretsBlog&quot;&gt;GitHub 仓库&lt;/a&gt; 中），但无奈于其较为高昂的开发与维护成本，我们最终放弃了这个平台。&lt;/p&gt;

&lt;p&gt;使用 jekyll 开发博客一个很大的优势就在于你不需要花太多的精力就可以完成成品，并可以一键式地更新你的博文，这也是 shuq3 和我选择使用 jekyll 开发 Random Thoughts 的原因。&lt;/p&gt;

&lt;h4 id=&quot;评论系统&quot;&gt;评论系统&lt;/h4&gt;
&lt;p&gt;缺乏后端和服务器的静态网站需要外接评论系统。我们起初尝试直接映射 GitHub Issues 作为评论系统，但考虑到多数人没有 GitHub 账号，于是我们采用了更为简便的 Valine。Valine 使用 Leancloud 提供的 BaaS 服务实现了评论系统的功能，在一定量的访问下，Leancloud 提供的服务完全免费，同时也免去了复杂的认证流程。&lt;/p&gt;</content><author><name></name></author><category term="博客" /><summary type="html">欢迎来到 Random Thoughts！</summary></entry></feed>